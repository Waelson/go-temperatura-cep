// Code generated by MockGen. DO NOT EDIT.
// Source: ../internal/service/integration.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
	reflect "reflect"

	model "github.com/Waelson/go-temperatura-cep/internal/model"
	gomock "github.com/golang/mock/gomock"
)

// MockIntegrationService is a mock of IntegrationService interface.
type MockIntegrationService struct {
	ctrl     *gomock.Controller
	recorder *MockIntegrationServiceMockRecorder
}

// MockIntegrationServiceMockRecorder is the mock recorder for MockIntegrationService.
type MockIntegrationServiceMockRecorder struct {
	mock *MockIntegrationService
}

// NewMockIntegrationService creates a new mock instance.
func NewMockIntegrationService(ctrl *gomock.Controller) *MockIntegrationService {
	mock := &MockIntegrationService{ctrl: ctrl}
	mock.recorder = &MockIntegrationServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIntegrationService) EXPECT() *MockIntegrationServiceMockRecorder {
	return m.recorder
}

// GetCep mocks base method.
func (m *MockIntegrationService) GetCep(cep string) (model.CepResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCep", cep)
	ret0, _ := ret[0].(model.CepResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCep indicates an expected call of GetCep.
func (mr *MockIntegrationServiceMockRecorder) GetCep(cep interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCep", reflect.TypeOf((*MockIntegrationService)(nil).GetCep), cep)
}

// GetTemperatura mocks base method.
func (m *MockIntegrationService) GetTemperatura(cidade string) (model.TemperaturaResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTemperatura", cidade)
	ret0, _ := ret[0].(model.TemperaturaResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTemperatura indicates an expected call of GetTemperatura.
func (mr *MockIntegrationServiceMockRecorder) GetTemperatura(cidade interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTemperatura", reflect.TypeOf((*MockIntegrationService)(nil).GetTemperatura), cidade)
}
